# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\res\window_main.ui'
#
# Created by: PyQt5 UI code generator 5.14.2
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_BDLMainWindow(object):
    def setupUi(self, BDLMainWindow):
        BDLMainWindow.setObjectName("BDLMainWindow")
        BDLMainWindow.resize(193, 178)
        BDLMainWindow.setMinimumSize(QtCore.QSize(193, 178))
        BDLMainWindow.setAcceptDrops(True)
        BDLMainWindow.setWindowTitle("bdl")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/ui/BDL_icon.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        BDLMainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(BDLMainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setSpacing(0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setStyleSheet("QTabWidget::pane { \n"
" position: absolute;\n"
" padding: 1px 1px 1px 1px;\n"
" margin: -8px -7px -8px -7px; }\n"
"\n"
"QTabBar::tab { padding: 2px 7px 0px 7px; }")
        self.tabWidget.setObjectName("tabWidget")
        self.tabMain = QtWidgets.QWidget()
        self.tabMain.setObjectName("tabMain")
        self.gridLayout = QtWidgets.QGridLayout(self.tabMain)
        self.gridLayout.setObjectName("gridLayout")
        self.tabMainGLayout = QtWidgets.QGridLayout()
        self.tabMainGLayout.setSpacing(0)
        self.tabMainGLayout.setObjectName("tabMainGLayout")
        self.bottomGLayout = QtWidgets.QVBoxLayout()
        self.bottomGLayout.setSpacing(1)
        self.bottomGLayout.setObjectName("bottomGLayout")
        self.splitter = QtWidgets.QSplitter(self.tabMain)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())
        self.splitter.setSizePolicy(sizePolicy)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setHandleWidth(1)
        self.splitter.setObjectName("splitter")
        self.layoutWidget = QtWidgets.QWidget(self.splitter)
        self.layoutWidget.setObjectName("layoutWidget")
        self.leftVLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.leftVLayout.setContentsMargins(0, 0, 0, 0)
        self.leftVLayout.setSpacing(0)
        self.leftVLayout.setObjectName("leftVLayout")
        self.pwadHLayout = QtWidgets.QHBoxLayout()
        self.pwadHLayout.setSpacing(0)
        self.pwadHLayout.setObjectName("pwadHLayout")
        self.pwadLabel = QtWidgets.QLabel(self.layoutWidget)
        self.pwadLabel.setToolTip("<html><head/><body><p>Add external files to run here, such as custom maps and mods (known as PWADs or &quot;patch WADs&quot;). Common extensions include .wad, .pk3, .deh, and .bex. BDL can also accept .zip files.</p><p>Drag and drop files to reorder them. Uncheck files to prevent them from being loaded.</p><p><span style=\" font-weight:600;\">Files will be loaded in the order they are listed, top to bottom.</span></p><p>This means if multiple files replace the same data (i.e. MAP01), only the last instance of that data will be loaded. Keep this in mind, especially when loading music and cosmetic mods.</p></body></html>")
        self.pwadLabel.setText("External Files")
        self.pwadLabel.setObjectName("pwadLabel")
        self.pwadHLayout.addWidget(self.pwadLabel)
        spacerItem = QtWidgets.QSpacerItem(3, 10, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.pwadHLayout.addItem(spacerItem)
        self.pwadAdd = QtWidgets.QPushButton(self.layoutWidget)
        self.pwadAdd.setMinimumSize(QtCore.QSize(15, 15))
        self.pwadAdd.setMaximumSize(QtCore.QSize(30, 15))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/ui/plus2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pwadAdd.setIcon(icon1)
        self.pwadAdd.setIconSize(QtCore.QSize(9, 9))
        self.pwadAdd.setObjectName("pwadAdd")
        self.pwadHLayout.addWidget(self.pwadAdd)
        self.pwadRem = QtWidgets.QPushButton(self.layoutWidget)
        self.pwadRem.setMaximumSize(QtCore.QSize(15, 15))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/ui/minus2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pwadRem.setIcon(icon2)
        self.pwadRem.setIconSize(QtCore.QSize(9, 9))
        self.pwadRem.setObjectName("pwadRem")
        self.pwadHLayout.addWidget(self.pwadRem)
        spacerItem1 = QtWidgets.QSpacerItem(2666, 0, QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Minimum)
        self.pwadHLayout.addItem(spacerItem1)
        self.leftVLayout.addLayout(self.pwadHLayout)
        self.pwadList = bdlListWidget(self.layoutWidget)
        self.pwadList.setMinimumSize(QtCore.QSize(0, 64))
        self.pwadList.setAcceptDrops(True)
        self.pwadList.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.pwadList.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pwadList.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.pwadList.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.pwadList.setMovement(QtWidgets.QListView.Free)
        self.pwadList.setObjectName("pwadList")
        self.leftVLayout.addWidget(self.pwadList)
        self.layoutWidget_2 = QtWidgets.QWidget(self.splitter)
        self.layoutWidget_2.setObjectName("layoutWidget_2")
        self.rightVLayout = QtWidgets.QVBoxLayout(self.layoutWidget_2)
        self.rightVLayout.setContentsMargins(0, 0, 0, 0)
        self.rightVLayout.setSpacing(1)
        self.rightVLayout.setObjectName("rightVLayout")
        self.portHLayout = QtWidgets.QHBoxLayout()
        self.portHLayout.setSpacing(0)
        self.portHLayout.setObjectName("portHLayout")
        self.portLabel = QtWidgets.QLabel(self.layoutWidget_2)
        self.portLabel.setToolTip("<html><head/><body><p>Install new or add existing source ports here.</p><p>Source ports are ports of Doom\'s source code and are the basis through which all game data (WADs) are played.</p></body></html>")
        self.portLabel.setText("Source Port")
        self.portLabel.setObjectName("portLabel")
        self.portHLayout.addWidget(self.portLabel)
        spacerItem2 = QtWidgets.QSpacerItem(3, 10, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.portHLayout.addItem(spacerItem2)
        self.portDownload = QtWidgets.QPushButton(self.layoutWidget_2)
        self.portDownload.setMaximumSize(QtCore.QSize(15, 15))
        self.portDownload.setToolTip("<html><head/><body><p>Download, install, and configure a new source port directly through BDL.</p></body></html>")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/ui/download7.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.portDownload.setIcon(icon3)
        self.portDownload.setIconSize(QtCore.QSize(9, 9))
        self.portDownload.setObjectName("portDownload")
        self.portHLayout.addWidget(self.portDownload)
        self.portMenuButton = QtWidgets.QToolButton(self.layoutWidget_2)
        self.portMenuButton.setMaximumSize(QtCore.QSize(15, 15))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/ui/browse.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.portMenuButton.setIcon(icon4)
        self.portMenuButton.setIconSize(QtCore.QSize(9, 9))
        self.portMenuButton.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.portMenuButton.setObjectName("portMenuButton")
        self.portHLayout.addWidget(self.portMenuButton)
        spacerItem3 = QtWidgets.QSpacerItem(2666, 0, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.portHLayout.addItem(spacerItem3)
        self.rightVLayout.addLayout(self.portHLayout)
        self.portCombo = bdlComboBox(self.layoutWidget_2)
        self.portCombo.setAcceptDrops(True)
        self.portCombo.setObjectName("portCombo")
        self.rightVLayout.addWidget(self.portCombo)
        self.portRenameLineEdit = QtWidgets.QLineEdit(self.layoutWidget_2)
        self.portRenameLineEdit.setToolTip("Enter a new name here and press enter when\n"
"finished. Leave blank to not change the name.")
        self.portRenameLineEdit.setText("")
        self.portRenameLineEdit.setPlaceholderText("Enter new name")
        self.portRenameLineEdit.setObjectName("portRenameLineEdit")
        self.rightVLayout.addWidget(self.portRenameLineEdit)
        spacerItem4 = QtWidgets.QSpacerItem(0, 2, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.rightVLayout.addItem(spacerItem4)
        self.iwadHLayout = QtWidgets.QHBoxLayout()
        self.iwadHLayout.setSpacing(0)
        self.iwadHLayout.setObjectName("iwadHLayout")
        self.iwadLabel = QtWidgets.QLabel(self.layoutWidget_2)
        self.iwadLabel.setToolTip("<html><head/><body><p>IWADs or &quot;Interal WADs&quot; are official game data, and act as the base for which custom files (or PWADs) replace and load custom data.</p><p>Examples of IWADs are <span style=\" font-style:italic;\">DOOM.WAD, DOOM2.WAD, TNT.WAD, PLUTONIA.WAD</span>, etc.</p></body></html>")
        self.iwadLabel.setText("IWAD")
        self.iwadLabel.setObjectName("iwadLabel")
        self.iwadHLayout.addWidget(self.iwadLabel)
        spacerItem5 = QtWidgets.QSpacerItem(1, 13, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.iwadHLayout.addItem(spacerItem5)
        self.iwadAdd = QtWidgets.QPushButton(self.layoutWidget_2)
        self.iwadAdd.setMinimumSize(QtCore.QSize(15, 15))
        self.iwadAdd.setMaximumSize(QtCore.QSize(30, 15))
        self.iwadAdd.setIcon(icon1)
        self.iwadAdd.setIconSize(QtCore.QSize(9, 9))
        self.iwadAdd.setObjectName("iwadAdd")
        self.iwadHLayout.addWidget(self.iwadAdd)
        self.iwadRem = QtWidgets.QPushButton(self.layoutWidget_2)
        self.iwadRem.setMaximumSize(QtCore.QSize(15, 15))
        self.iwadRem.setIcon(icon2)
        self.iwadRem.setIconSize(QtCore.QSize(9, 9))
        self.iwadRem.setObjectName("iwadRem")
        self.iwadHLayout.addWidget(self.iwadRem)
        self.iwadMenuButton = QtWidgets.QToolButton(self.layoutWidget_2)
        self.iwadMenuButton.setMaximumSize(QtCore.QSize(15, 15))
        self.iwadMenuButton.setIcon(icon4)
        self.iwadMenuButton.setIconSize(QtCore.QSize(9, 9))
        self.iwadMenuButton.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.iwadMenuButton.setObjectName("iwadMenuButton")
        self.iwadHLayout.addWidget(self.iwadMenuButton)
        spacerItem6 = QtWidgets.QSpacerItem(2666, 13, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.iwadHLayout.addItem(spacerItem6)
        self.rightVLayout.addLayout(self.iwadHLayout)
        self.iwadList = bdlListWidget(self.layoutWidget_2)
        self.iwadList.setMinimumSize(QtCore.QSize(0, 40))
        self.iwadList.setAcceptDrops(True)
        self.iwadList.setStyleSheet("QListWidget { outline: 0; }\n"
"\n"
"QListWidget::item {\n"
"margin-top: -4px;\n"
"margin-bottom: 1px; }\n"
"\n"
"QListView::item::text { color: black; }\n"
"\n"
"QListView::item:selected {\n"
"background-color: rgb(230, 230, 230);\n"
"margin-top: 0px;\n"
"margin-bottom: 0px; }\n"
"\n"
"QListView::item:selected:active {\n"
"background-color: rgb(0, 122, 215);\n"
"color: white; }")
        self.iwadList.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.iwadList.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.iwadList.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.iwadList.setMovement(QtWidgets.QListView.Free)
        self.iwadList.setObjectName("iwadList")
        self.rightVLayout.addWidget(self.iwadList)
        self.bottomGLayout.addWidget(self.splitter)
        self.parameterLineEdit = QtWidgets.QLineEdit(self.tabMain)
        self.parameterLineEdit.setToolTip("<html><head/><body><p>Add more command line arguments here, separated by spaces.</p></body></html>")
        self.parameterLineEdit.setPlaceholderText("Extra command line arguments")
        self.parameterLineEdit.setObjectName("parameterLineEdit")
        self.bottomGLayout.addWidget(self.parameterLineEdit)
        self.bottomHLayout = QtWidgets.QHBoxLayout()
        self.bottomHLayout.setSpacing(2)
        self.bottomHLayout.setObjectName("bottomHLayout")
        self.complevelCombo = QtWidgets.QComboBox(self.tabMain)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.complevelCombo.sizePolicy().hasHeightForWidth())
        self.complevelCombo.setSizePolicy(sizePolicy)
        self.complevelCombo.setMinimumSize(QtCore.QSize(128, 0))
        self.complevelCombo.setToolTip("<html><head/><body><p>Complevels, or compatibilty levels, are used by PrBoom+ and GLBoom+ to emulate various Doom versions and formats. This dropdown features the most common complevels.</p><p>If you\'re playing a custom wad, look for &quot;complevel&quot;, &quot;cl&quot;, a source port, or a specific format (vanilla, limit-removing, boom, MBF, UDMF) mentioned in its description, to know what to pick. If it says &quot;vanilla&quot; or &quot;limit-removing&quot; and its for Doom 2, pick complevel 2. If it says &quot;UDMF&quot; or &quot;Hexen in Doom 2&quot;, pick a ZDoom source port.</p><p>This dropdown can be overridden by manually specifying a complevel as one of your extra command line arguments.</p><p><span style=\" font-weight:600;\">This dropdown will have no effect if you\'re playing a demo.</span></p><p><span style=\" font-weight:600;\">This dropdown has no effect on other source ports.</span></p></body></html>")
        self.complevelCombo.setObjectName("complevelCombo")
        self.complevelCombo.addItem("")
        self.complevelCombo.setItemText(0, "-complevel 2 (Doom II)")
        self.complevelCombo.addItem("")
        self.complevelCombo.setItemText(1, "-complevel 3 (Ultimate Doom)")
        self.complevelCombo.addItem("")
        self.complevelCombo.setItemText(2, "-complevel 4 (Final Doom)")
        self.complevelCombo.addItem("")
        self.complevelCombo.setItemText(3, "-complevel 9 (Boom)")
        self.complevelCombo.addItem("")
        self.complevelCombo.setItemText(4, "-complevel 11 (MBF)")
        self.bottomHLayout.addWidget(self.complevelCombo)
        self.launchButton = QtWidgets.QPushButton(self.tabMain)
        self.launchButton.setMinimumSize(QtCore.QSize(50, 22))
        self.launchButton.setMaximumSize(QtCore.QSize(50, 22))
        self.launchButton.setText("Launch")
        self.launchButton.setDefault(True)
        self.launchButton.setObjectName("launchButton")
        self.bottomHLayout.addWidget(self.launchButton)
        self.bottomGLayout.addLayout(self.bottomHLayout)
        self.tabMainGLayout.addLayout(self.bottomGLayout, 0, 0, 1, 2)
        self.gridLayout.addLayout(self.tabMainGLayout, 7, 0, 1, 2)
        self.tabWidget.addTab(self.tabMain, "Main")
        self.tabSettings = QtWidgets.QWidget()
        self.tabSettings.setObjectName("tabSettings")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tabSettings)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.scrollArea = QtWidgets.QScrollArea(self.tabSettings)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 183, 134))
        self.scrollAreaWidgetContents_3.setMinimumSize(QtCore.QSize(124, 0))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents_3)
        self.gridLayout_11.setContentsMargins(0, 4, 0, 4)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setContentsMargins(-1, -1, -1, 3)
        self.gridLayout_8.setVerticalSpacing(4)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.demoGroup = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.demoGroup.sizePolicy().hasHeightForWidth())
        self.demoGroup.setSizePolicy(sizePolicy)
        self.demoGroup.setMaximumSize(QtCore.QSize(16777215, 13))
        self.demoGroup.setToolTip("<html><head/><body><p>Record or play a demo.</p></body></html>")
        self.demoGroup.setTitle("Record/Play Demo")
        self.demoGroup.setFlat(False)
        self.demoGroup.setCheckable(True)
        self.demoGroup.setChecked(False)
        self.demoGroup.setObjectName("demoGroup")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.demoGroup)
        self.gridLayout_9.setContentsMargins(3, 3, 1, 3)
        self.gridLayout_9.setHorizontalSpacing(0)
        self.gridLayout_9.setVerticalSpacing(1)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.demoPlayRadio = QtWidgets.QRadioButton(self.demoGroup)
        self.demoPlayRadio.setToolTip("Play an existing demo.\n"
"\n"
"Many parameters either interfere with or\n"
"do nothing when playing demos, so most\n"
"options on this page are disabled or\n"
"ignored while this option is selected.")
        self.demoPlayRadio.setText("Play")
        self.demoPlayRadio.setObjectName("demoPlayRadio")
        self.gridLayout_9.addWidget(self.demoPlayRadio, 1, 0, 1, 1)
        self.demoPlayPathLineEdit = bdlDemoLineEdit(self.demoGroup)
        self.demoPlayPathLineEdit.setMinimumSize(QtCore.QSize(50, 0))
        self.demoPlayPathLineEdit.setToolTip("Play an existing demo.\n"
"\n"
"Many parameters either interfere with or\n"
"do nothing when playing demos, so most\n"
"options on this page are disabled or\n"
"ignored while this option is selected.")
        self.demoPlayPathLineEdit.setPlaceholderText("Path to demo")
        self.demoPlayPathLineEdit.setObjectName("demoPlayPathLineEdit")
        self.gridLayout_9.addWidget(self.demoPlayPathLineEdit, 1, 3, 1, 1)
        self.demoRecordNameLineEdit = QtWidgets.QLineEdit(self.demoGroup)
        self.demoRecordNameLineEdit.setMinimumSize(QtCore.QSize(50, 0))
        self.demoRecordNameLineEdit.setToolTip("Record a new demo. Use the browse button\n"
"to select a directory to save your demo to.\n"
"\n"
"Not specifying a name for your demo will\n"
"default it to \"unnamed_demo.lmp\".\n"
"\n"
"Recording demos requires warping to a level.\n"
"If no warp is specified, BDL will default to\n"
"the first level on skill 4, Ultra-Violence.")
        self.demoRecordNameLineEdit.setPlaceholderText("Name of demo")
        self.demoRecordNameLineEdit.setObjectName("demoRecordNameLineEdit")
        self.gridLayout_9.addWidget(self.demoRecordNameLineEdit, 0, 3, 1, 1)
        self.demoPlayBrowseButton = QtWidgets.QPushButton(self.demoGroup)
        self.demoPlayBrowseButton.setMaximumSize(QtCore.QSize(20, 18))
        self.demoPlayBrowseButton.setToolTip("Browse for your demo file of choice.")
        self.demoPlayBrowseButton.setText("...")
        self.demoPlayBrowseButton.setObjectName("demoPlayBrowseButton")
        self.gridLayout_9.addWidget(self.demoPlayBrowseButton, 1, 4, 1, 1)
        self.demoRecordRadio = QtWidgets.QRadioButton(self.demoGroup)
        self.demoRecordRadio.setToolTip("Record a new demo. Use the browse button\n"
"to select a directory to save your demo to.\n"
"\n"
"Not specifying a name for your demo will\n"
"default it to \"unnamed_demo.lmp\".\n"
"\n"
"Recording demos requires warping to a level.\n"
"If no warp is specified, BDL will default to\n"
"the first level on skill 4, Ultra-Violence.")
        self.demoRecordRadio.setText("Record")
        self.demoRecordRadio.setChecked(True)
        self.demoRecordRadio.setObjectName("demoRecordRadio")
        self.gridLayout_9.addWidget(self.demoRecordRadio, 0, 0, 1, 1)
        self.demoRecordBrowseButton = QtWidgets.QPushButton(self.demoGroup)
        self.demoRecordBrowseButton.setMaximumSize(QtCore.QSize(20, 18))
        self.demoRecordBrowseButton.setToolTip("Browse for a directory to save your demo to.")
        self.demoRecordBrowseButton.setStyleSheet("QPushButton {\n"
"padding-left: 0px; padding-right: 0px;\n"
"}")
        self.demoRecordBrowseButton.setText("...")
        self.demoRecordBrowseButton.setObjectName("demoRecordBrowseButton")
        self.gridLayout_9.addWidget(self.demoRecordBrowseButton, 0, 4, 1, 1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setSpacing(15)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.demoAutoRecordCheck = QtWidgets.QCheckBox(self.demoGroup)
        self.demoAutoRecordCheck.setMaximumSize(QtCore.QSize(16777215, 21))
        self.demoAutoRecordCheck.setToolTip("<html><head/><body><p>Automatically start recording a new demo after the previous recording finishes. Mainly intended for speedrunners, who must restart frequently.</p><p>Appends an attempt number to the end of each file. Demos must be deleted manually.</p><p><span style=\" font-weight:600;\">This setting must be disabled while in-game.</span></p></body></html>")
        self.demoAutoRecordCheck.setText("Auto-record")
        self.demoAutoRecordCheck.setObjectName("demoAutoRecordCheck")
        self.horizontalLayout_2.addWidget(self.demoAutoRecordCheck)
        self.demoLongTicsCheck = QtWidgets.QCheckBox(self.demoGroup)
        self.demoLongTicsCheck.setMaximumSize(QtCore.QSize(16777215, 21))
        self.demoLongTicsCheck.setToolTip("<html><head/><body><p>Forces demos to use standard high-precision turning.</p><p>Normally, demos are recorded using &quot;shorttics&quot;, a method of reducing the size of demos by limiting the angles players can face to an 8-bit number, 0-255. While this is actually useful for several speedrunning tricks, this can be jarring and uncomfortable for normal gameplay.</p><p>Turning on longtics is useful when casually recording demos, such as for playtesting purposes. As such, turning on longtics will disable BDL\'s auto-record feature.</p><p><span style=\" font-weight:600;\">Does not work with complevels 9 and 11 in Pr/GLBoom+.</span></p><p><span style=\" font-weight:600;\">Do not use -longtics when speedrunning.</span></p></body></html>")
        self.demoLongTicsCheck.setText("-longtics")
        self.demoLongTicsCheck.setObjectName("demoLongTicsCheck")
        self.horizontalLayout_2.addWidget(self.demoLongTicsCheck)
        self.gridLayout_9.addLayout(self.horizontalLayout_2, 4, 0, 1, 5)
        self.gridLayout_8.addWidget(self.demoGroup, 0, 0, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_8.addItem(spacerItem7, 3, 0, 1, 1)
        self.paramGroup = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_3)
        self.paramGroup.setMaximumSize(QtCore.QSize(16777215, 13))
        self.paramGroup.setToolTip("Change additional optional parameters\n"
"to alter your game.")
        self.paramGroup.setTitle("Show more parameters")
        self.paramGroup.setAlignment(QtCore.Qt.AlignCenter)
        self.paramGroup.setFlat(True)
        self.paramGroup.setCheckable(True)
        self.paramGroup.setChecked(False)
        self.paramGroup.setObjectName("paramGroup")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.paramGroup)
        self.gridLayout_5.setContentsMargins(-1, 3, 0, 3)
        self.gridLayout_5.setVerticalSpacing(2)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.paramRespawn = QtWidgets.QCheckBox(self.paramGroup)
        self.paramRespawn.setToolTip("Demons will respawn after a short delay\n"
"once killed. This setting is on by default\n"
"on NIGHTMARE! difficulty.\n"
"\n"
"Can be used outside of NIGHTMARE! to\n"
"spice up the other difficulty settings.")
        self.paramRespawn.setText("-respawn")
        self.paramRespawn.setObjectName("paramRespawn")
        self.gridLayout_5.addWidget(self.paramRespawn, 0, 1, 1, 1)
        self.paramSoloNet = QtWidgets.QCheckBox(self.paramGroup)
        self.paramSoloNet.setToolTip("<html><head/><body><p style=\"line-height:0.125\">Starts a fake multiplayer game with</p><p style=\"line-height:0.125\">just you. Allows players to play</p><p style=\"line-height:0.125\">multiplayer-only versions of levels</p><p style=\"line-height:0.125\">in a singleplayer environment.</p><p style=\"line-height:0.125\"><br/></p><p style=\"line-height:0.125\">Using solo-net will also turn on</p><p style=\"line-height:0.125\">multiplayer rules, such as players</p><p style=\"line-height:0.125\">respawning when they die.</p><p style=\"line-height:0.125\"><br/></p><p><span style=\" font-weight:600;\">Not available in GZDoom.</span></p></body></html>")
        self.paramSoloNet.setText("-solo-net")
        self.paramSoloNet.setObjectName("paramSoloNet")
        self.gridLayout_5.addWidget(self.paramSoloNet, 1, 0, 1, 1)
        self.paramNoSound = QtWidgets.QCheckBox(self.paramGroup)
        self.paramNoSound.setToolTip("Disables both music\n"
"and sound effects.")
        self.paramNoSound.setText("-nosound")
        self.paramNoSound.setObjectName("paramNoSound")
        self.gridLayout_5.addWidget(self.paramNoSound, 2, 0, 1, 1)
        self.paramLevelStat = QtWidgets.QCheckBox(self.paramGroup)
        self.paramLevelStat.setToolTip("Generates a levelstat.txt file with in-depth\n"
"map-by-map stats and times.")
        self.paramLevelStat.setText("-levelstat")
        self.paramLevelStat.setObjectName("paramLevelStat")
        self.gridLayout_5.addWidget(self.paramLevelStat, 1, 1, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setSpacing(3)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.paramTurboCheck = QtWidgets.QCheckBox(self.paramGroup)
        self.paramTurboCheck.setToolTip("Adjusts player speed as a percentage from\n"
"10-400, with 100 being normal movement.\n"
"(ex. 150 would be 150% normal speed)\n"
"\n"
"Forcing this value above 255 will have...\n"
"interesting effects when holding run.")
        self.paramTurboCheck.setText("-turbo")
        self.paramTurboCheck.setObjectName("paramTurboCheck")
        self.horizontalLayout.addWidget(self.paramTurboCheck)
        self.paramTurboSpin = QtWidgets.QSpinBox(self.paramGroup)
        self.paramTurboSpin.setEnabled(False)
        self.paramTurboSpin.setAccelerated(True)
        self.paramTurboSpin.setPrefix("")
        self.paramTurboSpin.setMinimum(10)
        self.paramTurboSpin.setMaximum(255)
        self.paramTurboSpin.setProperty("value", 100)
        self.paramTurboSpin.setObjectName("paramTurboSpin")
        self.horizontalLayout.addWidget(self.paramTurboSpin)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem8)
        self.gridLayout_5.addLayout(self.horizontalLayout, 6, 0, 1, 2)
        self.paramFast = QtWidgets.QCheckBox(self.paramGroup)
        self.paramFast.setToolTip("Fast monsters, with dramatically\n"
"increased aggression and projectile\n"
"speeds. This setting is on by default\n"
"on NIGHTMARE! difficulty.\n"
"\n"
"Can be used outside of NIGHTMARE! to\n"
"spice up the other difficulty settings.")
        self.paramFast.setText("-fast")
        self.paramFast.setObjectName("paramFast")
        self.gridLayout_5.addWidget(self.paramFast, 0, 0, 1, 1)
        self.paramNoMusic = QtWidgets.QCheckBox(self.paramGroup)
        self.paramNoMusic.setToolTip("Disables music.")
        self.paramNoMusic.setText("-nomusic")
        self.paramNoMusic.setObjectName("paramNoMusic")
        self.gridLayout_5.addWidget(self.paramNoMusic, 4, 0, 1, 1)
        self.paramNoMonsters = QtWidgets.QCheckBox(self.paramGroup)
        self.paramNoMonsters.setToolTip("Removes demons from the game.\n"
"\n"
"This will break levels that require\n"
"killing specific monsters to exit.")
        self.paramNoMonsters.setText("-nomonsters")
        self.paramNoMonsters.setObjectName("paramNoMonsters")
        self.gridLayout_5.addWidget(self.paramNoMonsters, 2, 1, 1, 1)
        self.paramNoSFX = QtWidgets.QCheckBox(self.paramGroup)
        self.paramNoSFX.setToolTip("Disables sound effects.")
        self.paramNoSFX.setText("-nosfx")
        self.paramNoSFX.setObjectName("paramNoSFX")
        self.gridLayout_5.addWidget(self.paramNoSFX, 4, 1, 1, 1)
        self.gridLayout_8.addWidget(self.paramGroup, 2, 0, 1, 1)
        self.warpGroup = QtWidgets.QGroupBox(self.scrollAreaWidgetContents_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.warpGroup.sizePolicy().hasHeightForWidth())
        self.warpGroup.setSizePolicy(sizePolicy)
        self.warpGroup.setMinimumSize(QtCore.QSize(130, 0))
        self.warpGroup.setMaximumSize(QtCore.QSize(16777215, 13))
        self.warpGroup.setToolTip("Set the level and difficulty to start on.\n"
"Enabling this will skip the main menu\n"
"and automatically send you to your\n"
"map and difficulty of choice.")
        self.warpGroup.setTitle("Warp to level")
        self.warpGroup.setCheckable(True)
        self.warpGroup.setChecked(False)
        self.warpGroup.setObjectName("warpGroup")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.warpGroup)
        self.gridLayout_10.setContentsMargins(7, 5, -1, 8)
        self.gridLayout_10.setVerticalSpacing(3)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.warpSkillLabel = QtWidgets.QLabel(self.warpGroup)
        self.warpSkillLabel.setMaximumSize(QtCore.QSize(20, 16777215))
        self.warpSkillLabel.setText("Skill")
        self.warpSkillLabel.setObjectName("warpSkillLabel")
        self.gridLayout_10.addWidget(self.warpSkillLabel, 1, 0, 1, 1)
        self.warpMapLabel = QtWidgets.QLabel(self.warpGroup)
        self.warpMapLabel.setMaximumSize(QtCore.QSize(20, 16777215))
        self.warpMapLabel.setText("Map")
        self.warpMapLabel.setObjectName("warpMapLabel")
        self.gridLayout_10.addWidget(self.warpMapLabel, 0, 0, 1, 1)
        self.warpMapCombo = QtWidgets.QComboBox(self.warpGroup)
        self.warpMapCombo.setMinimumSize(QtCore.QSize(124, 0))
        self.warpMapCombo.setToolTip("-warp [##] or [# #]\n"
"\n"
"Sets the level to start on. For Doom II and\n"
"onward, the number used to warp is the\n"
"actual map number (i.e. MAP25 -> -warp 25)\n"
"whereas for the original Doom as well as Heretic,\n"
"-warp uses the episode number and map number\n"
"separated by a space (i.e. E3M2 -> -warp 3 2).")
        self.warpMapCombo.setObjectName("warpMapCombo")
        self.warpMapCombo.addItem("")
        self.warpMapCombo.setItemText(0, "")
        self.gridLayout_10.addWidget(self.warpMapCombo, 0, 1, 1, 1)
        self.warpSkillCombo = QtWidgets.QComboBox(self.warpGroup)
        self.warpSkillCombo.setMinimumSize(QtCore.QSize(124, 0))
        self.warpSkillCombo.setToolTip("-skill [1-5]\n"
"\n"
"Sets the difficulty. Setting the skill without\n"
"selecting a map will simply warp you to the\n"
"first map.")
        self.warpSkillCombo.setObjectName("warpSkillCombo")
        self.warpSkillCombo.addItem("")
        self.warpSkillCombo.setItemText(0, "I\'m Too Young To Die")
        self.warpSkillCombo.addItem("")
        self.warpSkillCombo.setItemText(1, "Hey, Not Too Rough")
        self.warpSkillCombo.addItem("")
        self.warpSkillCombo.setItemText(2, "Hurt Me Plenty")
        self.warpSkillCombo.addItem("")
        self.warpSkillCombo.setItemText(3, "Ultra-Violence")
        self.warpSkillCombo.addItem("")
        self.warpSkillCombo.setItemText(4, "NIGHTMARE!")
        self.gridLayout_10.addWidget(self.warpSkillCombo, 1, 1, 1, 1)
        self.gridLayout_8.addWidget(self.warpGroup, 1, 0, 1, 1)
        self.gridLayout_11.addLayout(self.gridLayout_8, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents_3)
        self.gridLayout_4.addWidget(self.scrollArea, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tabSettings, "Settings")
        self.tabTools = QtWidgets.QWidget()
        self.tabTools.setObjectName("tabTools")
        self.tabWidget.addTab(self.tabTools, "Tools")
        self.tabBDL = QtWidgets.QWidget()
        self.tabBDL.setObjectName("tabBDL")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.tabBDL)
        self.gridLayout_6.setContentsMargins(9, -1, 9, 10)
        self.gridLayout_6.setHorizontalSpacing(0)
        self.gridLayout_6.setVerticalSpacing(1)
        self.gridLayout_6.setObjectName("gridLayout_6")
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem9, 2, 2, 1, 1)
        self.commandLinePreviewButton = QtWidgets.QPushButton(self.tabBDL)
        self.commandLinePreviewButton.setMaximumSize(QtCore.QSize(126, 21))
        self.commandLinePreviewButton.setText("Preview Command Line")
        self.commandLinePreviewButton.setObjectName("commandLinePreviewButton")
        self.gridLayout_6.addWidget(self.commandLinePreviewButton, 2, 3, 1, 1)
        self.bdlMenuButton = QtWidgets.QToolButton(self.tabBDL)
        self.bdlMenuButton.setText("BDL")
        self.bdlMenuButton.setIconSize(QtCore.QSize(9, 9))
        self.bdlMenuButton.setPopupMode(QtWidgets.QToolButton.MenuButtonPopup)
        self.bdlMenuButton.setObjectName("bdlMenuButton")
        self.gridLayout_6.addWidget(self.bdlMenuButton, 2, 1, 1, 1)
        self.scrollArea_3 = QtWidgets.QScrollArea(self.tabBDL)
        self.scrollArea_3.setWidgetResizable(True)
        self.scrollArea_3.setObjectName("scrollArea_3")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 166, 136))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_12.setContentsMargins(3, 2, 0, 2)
        self.gridLayout_12.setSpacing(0)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.bdlCapitalization = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        self.bdlCapitalization.setMaximumSize(QtCore.QSize(120, 16777215))
        self.bdlCapitalization.setToolTip("Force the word \"Doom\" to be automatically\n"
"capitalized in the selected style for all currently\n"
"added and any future added IWADs.")
        self.bdlCapitalization.setText("Capitalization:")
        self.bdlCapitalization.setChecked(True)
        self.bdlCapitalization.setObjectName("bdlCapitalization")
        self.gridLayout_12.addWidget(self.bdlCapitalization, 3, 0, 1, 1)
        self.bdlDetectIWADs = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        self.bdlDetectIWADs.setToolTip("Generates and reads the md5 hashes\n"
"of IWADs to validate and name them.\n"
"\n"
"May cause minor hiccups when adding\n"
"IWADs on older machines.")
        self.bdlDetectIWADs.setText("Detect IWADs")
        self.bdlDetectIWADs.setChecked(True)
        self.bdlDetectIWADs.setObjectName("bdlDetectIWADs")
        self.gridLayout_12.addWidget(self.bdlDetectIWADs, 2, 0, 1, 1)
        self.bdlPWADsCheckable = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        self.bdlPWADsCheckable.setToolTip("Allows users to check off which PWADs\n"
"they wish to load on the next launch.")
        self.bdlPWADsCheckable.setText("PWADs can be disabled")
        self.bdlPWADsCheckable.setChecked(True)
        self.bdlPWADsCheckable.setObjectName("bdlPWADsCheckable")
        self.gridLayout_12.addWidget(self.bdlPWADsCheckable, 1, 0, 1, 2)
        self.bdlUpdateButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.bdlUpdateButton.setEnabled(False)
        self.bdlUpdateButton.setMaximumSize(QtCore.QSize(51, 21))
        self.bdlUpdateButton.setToolTip("No update available.")
        self.bdlUpdateButton.setStyleSheet("QPushButton::enabled {\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 rgba(0, 0, 225, 255), stop:1 rgba(200, 200, 0, 255));\n"
"color: rgb(0, 255, 0);\n"
"font: bold 8pt;\n"
"}")
        self.bdlUpdateButton.setText("Update")
        self.bdlUpdateButton.setObjectName("bdlUpdateButton")
        self.gridLayout_12.addWidget(self.bdlUpdateButton, 8, 1, 1, 1)
        self.bdlCapitalizationCombo = QtWidgets.QComboBox(self.scrollAreaWidgetContents)
        self.bdlCapitalizationCombo.setMaximumSize(QtCore.QSize(61, 17))
        self.bdlCapitalizationCombo.setCurrentText("Doom")
        self.bdlCapitalizationCombo.setObjectName("bdlCapitalizationCombo")
        self.bdlCapitalizationCombo.addItem("")
        self.bdlCapitalizationCombo.setItemText(0, "Doom")
        self.bdlCapitalizationCombo.addItem("")
        self.bdlCapitalizationCombo.setItemText(1, "DOOM")
        self.bdlCapitalizationCombo.addItem("")
        self.bdlCapitalizationCombo.setItemText(2, "DooM")
        self.gridLayout_12.addWidget(self.bdlCapitalizationCombo, 3, 1, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_12.addItem(spacerItem10, 11, 0, 1, 1)
        self.bdlAutoClose = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        self.bdlAutoClose.setToolTip("Close BDL after launching a game. BDL\n"
"will only close once the game is closed.")
        self.bdlAutoClose.setText("Close on launch")
        self.bdlAutoClose.setObjectName("bdlAutoClose")
        self.gridLayout_12.addWidget(self.bdlAutoClose, 0, 0, 1, 2)
        self.bdlRejectBadIWADs = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        self.bdlRejectBadIWADs.setMaximumSize(QtCore.QSize(64, 16777215))
        self.bdlRejectBadIWADs.setToolTip("Displays a warning when an\n"
"invalid IWAD is detected.")
        self.bdlRejectBadIWADs.setText("Warnings")
        self.bdlRejectBadIWADs.setChecked(True)
        self.bdlRejectBadIWADs.setObjectName("bdlRejectBadIWADs")
        self.gridLayout_12.addWidget(self.bdlRejectBadIWADs, 2, 1, 1, 1)
        self.bdlUpdateCheckNowButton = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.bdlUpdateCheckNowButton.setMaximumSize(QtCore.QSize(64, 19))
        self.bdlUpdateCheckNowButton.setToolTip("")
        self.bdlUpdateCheckNowButton.setText("Check Now")
        self.bdlUpdateCheckNowButton.setObjectName("bdlUpdateCheckNowButton")
        self.gridLayout_12.addWidget(self.bdlUpdateCheckNowButton, 6, 1, 1, 1)
        self.bdlUpdateLastCheckLabel = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.bdlUpdateLastCheckLabel.setMaximumSize(QtCore.QSize(107, 16777215))
        self.bdlUpdateLastCheckLabel.setText("Last check: N/A")
        self.bdlUpdateLastCheckLabel.setObjectName("bdlUpdateLastCheckLabel")
        self.gridLayout_12.addWidget(self.bdlUpdateLastCheckLabel, 8, 0, 1, 1)
        self.line = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.line.setMinimumSize(QtCore.QSize(0, 6))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_12.addWidget(self.line, 5, 0, 1, 2)
        self.bdlAutoUpdateCheck = QtWidgets.QCheckBox(self.scrollAreaWidgetContents)
        self.bdlAutoUpdateCheck.setMaximumSize(QtCore.QSize(113, 16777215))
        self.bdlAutoUpdateCheck.setToolTip("Automatically check for an update\n"
"on startup once per day.")
        self.bdlAutoUpdateCheck.setText("Update check")
        self.bdlAutoUpdateCheck.setChecked(True)
        self.bdlAutoUpdateCheck.setObjectName("bdlAutoUpdateCheck")
        self.gridLayout_12.addWidget(self.bdlAutoUpdateCheck, 6, 0, 1, 1)
        self.bdlDownloadLayout = QtWidgets.QFormLayout()
        self.bdlDownloadLayout.setHorizontalSpacing(29)
        self.bdlDownloadLayout.setObjectName("bdlDownloadLayout")
        self.bdlDownloadLabel = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.bdlDownloadLabel.setMaximumSize(QtCore.QSize(115, 16777215))
        self.bdlDownloadLabel.setText("Downloading...")
        self.bdlDownloadLabel.setObjectName("bdlDownloadLabel")
        self.bdlDownloadLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.bdlDownloadLabel)
        self.bdlDownloadProgress = QtWidgets.QProgressBar(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.bdlDownloadProgress.sizePolicy().hasHeightForWidth())
        self.bdlDownloadProgress.setSizePolicy(sizePolicy)
        self.bdlDownloadProgress.setMinimumSize(QtCore.QSize(51, 16))
        self.bdlDownloadProgress.setMaximumSize(QtCore.QSize(16777215, 17))
        self.bdlDownloadProgress.setMaximum(0)
        self.bdlDownloadProgress.setAlignment(QtCore.Qt.AlignCenter)
        self.bdlDownloadProgress.setFormat("%p%")
        self.bdlDownloadProgress.setObjectName("bdlDownloadProgress")
        self.bdlDownloadLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.bdlDownloadProgress)
        self.gridLayout_12.addLayout(self.bdlDownloadLayout, 10, 0, 1, 2)
        self.scrollArea_3.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_6.addWidget(self.scrollArea_3, 0, 0, 1, 4)
        self.tabWidget.addTab(self.tabBDL, "bdl")
        self.gridLayout_3.addWidget(self.tabWidget, 0, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout_3, 0, 0, 1, 1)
        BDLMainWindow.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(BDLMainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 193, 21))
        self.menuBar.setObjectName("menuBar")
        self.portMenu = QtWidgets.QMenu(self.menuBar)
        self.portMenu.setTitle("Source Ports")
        self.portMenu.setObjectName("portMenu")
        self.iwadMenu = QtWidgets.QMenu(self.menuBar)
        self.iwadMenu.setTitle("IWADs")
        self.iwadMenu.setObjectName("iwadMenu")
        self.iwadMenuSteam = QtWidgets.QMenu(self.iwadMenu)
        self.iwadMenuSteam.setTitle("Purchase on Steam...")
        self.iwadMenuSteam.setObjectName("iwadMenuSteam")
        self.iwadMenuDeals = QtWidgets.QMenu(self.iwadMenu)
        self.iwadMenuDeals.setTitle("Check for deals...")
        self.iwadMenuDeals.setObjectName("iwadMenuDeals")
        self.bdlMenu = QtWidgets.QMenu(self.menuBar)
        self.bdlMenu.setObjectName("bdlMenu")
        BDLMainWindow.setMenuBar(self.menuBar)
        self.portAdd = QtWidgets.QAction(BDLMainWindow)
        self.portAdd.setText("Add existing source ports")
        self.portAdd.setObjectName("portAdd")
        self.portRem = QtWidgets.QAction(BDLMainWindow)
        self.portRem.setText("Remove selected source port")
        self.portRem.setObjectName("portRem")
        self.portMoveDown = QtWidgets.QAction(BDLMainWindow)
        self.portMoveDown.setText("Move down")
        self.portMoveDown.setObjectName("portMoveDown")
        self.portMoveUp = QtWidgets.QAction(BDLMainWindow)
        self.portMoveUp.setText("Move up")
        self.portMoveUp.setObjectName("portMoveUp")
        self.portDownloadAction = QtWidgets.QAction(BDLMainWindow)
        self.portDownloadAction.setText("Download new source port")
        self.portDownloadAction.setObjectName("portDownloadAction")
        self.portMoveToBottom = QtWidgets.QAction(BDLMainWindow)
        self.portMoveToBottom.setText("Move to bottom")
        self.portMoveToBottom.setObjectName("portMoveToBottom")
        self.portMoveToTop = QtWidgets.QAction(BDLMainWindow)
        self.portMoveToTop.setText("Move to top")
        self.portMoveToTop.setObjectName("portMoveToTop")
        self.portRename = QtWidgets.QAction(BDLMainWindow)
        self.portRename.setText("Rename selected source port")
        self.portRename.setObjectName("portRename")
        self.portBrowseLocalFiles = QtWidgets.QAction(BDLMainWindow)
        self.portBrowseLocalFiles.setText("Open source port location...")
        self.portBrowseLocalFiles.setObjectName("portBrowseLocalFiles")
        self.iwadBrowseLocalFiles = QtWidgets.QAction(BDLMainWindow)
        self.iwadBrowseLocalFiles.setText("Open IWAD location...")
        self.iwadBrowseLocalFiles.setObjectName("iwadBrowseLocalFiles")
        self.iwadSteamUDoom = QtWidgets.QAction(BDLMainWindow)
        self.iwadSteamUDoom.setText("Ultimate Doom")
        self.iwadSteamUDoom.setObjectName("iwadSteamUDoom")
        self.iwadSteamDoom2 = QtWidgets.QAction(BDLMainWindow)
        self.iwadSteamDoom2.setText("Doom II: Hell on Earth")
        self.iwadSteamDoom2.setObjectName("iwadSteamDoom2")
        self.iwadSteamFinalDoom = QtWidgets.QAction(BDLMainWindow)
        self.iwadSteamFinalDoom.setText("Final Doom")
        self.iwadSteamFinalDoom.setObjectName("iwadSteamFinalDoom")
        self.iwadSteamClassicComplete = QtWidgets.QAction(BDLMainWindow)
        self.iwadSteamClassicComplete.setText("Doom Classic Complete")
        self.iwadSteamClassicComplete.setObjectName("iwadSteamClassicComplete")
        self.iwadDealsUDoom = QtWidgets.QAction(BDLMainWindow)
        self.iwadDealsUDoom.setText("Ultimate Doom")
        self.iwadDealsUDoom.setObjectName("iwadDealsUDoom")
        self.iwadDealsDoom2 = QtWidgets.QAction(BDLMainWindow)
        self.iwadDealsDoom2.setText("Doom II: Hell on Earth")
        self.iwadDealsDoom2.setObjectName("iwadDealsDoom2")
        self.iwadDealsFinalDoom = QtWidgets.QAction(BDLMainWindow)
        self.iwadDealsFinalDoom.setText("Final Doom")
        self.iwadDealsFinalDoom.setObjectName("iwadDealsFinalDoom")
        self.iwadDealsClassicComplete = QtWidgets.QAction(BDLMainWindow)
        self.iwadDealsClassicComplete.setText("Doom Classic Complete")
        self.iwadDealsClassicComplete.setObjectName("iwadDealsClassicComplete")
        self.bdlMenuAbout = QtWidgets.QAction(BDLMainWindow)
        self.bdlMenuAbout.setObjectName("bdlMenuAbout")
        self.bdlMenuClearEverything = QtWidgets.QAction(BDLMainWindow)
        self.bdlMenuClearEverything.setObjectName("bdlMenuClearEverything")
        self.portClearAll = QtWidgets.QAction(BDLMainWindow)
        self.portClearAll.setObjectName("portClearAll")
        self.bdlMenuSaveini = QtWidgets.QAction(BDLMainWindow)
        self.bdlMenuSaveini.setObjectName("bdlMenuSaveini")
        self.bdlMenuLoadini = QtWidgets.QAction(BDLMainWindow)
        self.bdlMenuLoadini.setObjectName("bdlMenuLoadini")
        self.actionFind_Steam_IWADs = QtWidgets.QAction(BDLMainWindow)
        self.actionFind_Steam_IWADs.setObjectName("actionFind_Steam_IWADs")
        self.iwadAutoAddSteamIWADs = QtWidgets.QAction(BDLMainWindow)
        self.iwadAutoAddSteamIWADs.setObjectName("iwadAutoAddSteamIWADs")
        self.iwadClearAll = QtWidgets.QAction(BDLMainWindow)
        self.iwadClearAll.setObjectName("iwadClearAll")
        self.portMenu.addAction(self.portDownloadAction)
        self.portMenu.addSeparator()
        self.portMenu.addAction(self.portAdd)
        self.portMenu.addAction(self.portRem)
        self.portMenu.addAction(self.portClearAll)
        self.portMenu.addSeparator()
        self.portMenu.addAction(self.portBrowseLocalFiles)
        self.portMenu.addAction(self.portRename)
        self.portMenu.addSeparator()
        self.portMenu.addAction(self.portMoveUp)
        self.portMenu.addAction(self.portMoveDown)
        self.portMenu.addAction(self.portMoveToBottom)
        self.portMenu.addAction(self.portMoveToTop)
        self.iwadMenuSteam.addAction(self.iwadSteamUDoom)
        self.iwadMenuSteam.addAction(self.iwadSteamDoom2)
        self.iwadMenuSteam.addAction(self.iwadSteamFinalDoom)
        self.iwadMenuSteam.addSeparator()
        self.iwadMenuSteam.addAction(self.iwadSteamClassicComplete)
        self.iwadMenuDeals.addAction(self.iwadDealsUDoom)
        self.iwadMenuDeals.addAction(self.iwadDealsDoom2)
        self.iwadMenuDeals.addAction(self.iwadDealsFinalDoom)
        self.iwadMenuDeals.addSeparator()
        self.iwadMenuDeals.addAction(self.iwadDealsClassicComplete)
        self.iwadMenu.addAction(self.iwadBrowseLocalFiles)
        self.iwadMenu.addSeparator()
        self.iwadMenu.addAction(self.iwadAutoAddSteamIWADs)
        self.iwadMenu.addAction(self.iwadClearAll)
        self.iwadMenu.addSeparator()
        self.iwadMenu.addAction(self.iwadMenuSteam.menuAction())
        self.iwadMenu.addAction(self.iwadMenuDeals.menuAction())
        self.bdlMenu.addAction(self.bdlMenuSaveini)
        self.bdlMenu.addAction(self.bdlMenuLoadini)
        self.bdlMenu.addSeparator()
        self.bdlMenu.addAction(self.bdlMenuClearEverything)
        self.bdlMenu.addSeparator()
        self.bdlMenu.addAction(self.bdlMenuAbout)
        self.menuBar.addAction(self.portMenu.menuAction())
        self.menuBar.addAction(self.iwadMenu.menuAction())
        self.menuBar.addAction(self.bdlMenu.menuAction())

        self.retranslateUi(BDLMainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.warpSkillCombo.setCurrentIndex(3)
        self.demoGroup.toggled['bool'].connect(self.warpGroup.setChecked)
        self.demoPlayRadio.toggled['bool'].connect(self.warpGroup.setDisabled)
        self.bdlDetectIWADs.toggled['bool'].connect(self.bdlRejectBadIWADs.setEnabled)
        self.paramTurboCheck.toggled['bool'].connect(self.paramTurboSpin.setEnabled)
        self.demoLongTicsCheck.toggled['bool'].connect(self.demoAutoRecordCheck.setDisabled)
        QtCore.QMetaObject.connectSlotsByName(BDLMainWindow)

    def retranslateUi(self, BDLMainWindow):
        _translate = QtCore.QCoreApplication.translate
        self.bdlMenu.setTitle(_translate("BDLMainWindow", "BDL"))
        self.bdlMenuAbout.setText(_translate("BDLMainWindow", "About"))
        self.bdlMenuClearEverything.setText(_translate("BDLMainWindow", "Clear everything"))
        self.portClearAll.setText(_translate("BDLMainWindow", "Clear all source ports"))
        self.bdlMenuSaveini.setText(_translate("BDLMainWindow", "Save .ini"))
        self.bdlMenuLoadini.setText(_translate("BDLMainWindow", "Load .ini"))
        self.actionFind_Steam_IWADs.setText(_translate("BDLMainWindow", "Find Steam IWADs"))
        self.iwadAutoAddSteamIWADs.setText(_translate("BDLMainWindow", "Auto-add Steam IWADs"))
        self.iwadClearAll.setText(_translate("BDLMainWindow", "Clear all IWADs"))
from bdlWidgets import bdlComboBox, bdlDemoLineEdit, bdlListWidget
import res_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BDLMainWindow = QtWidgets.QMainWindow()
    ui = Ui_BDLMainWindow()
    ui.setupUi(BDLMainWindow)
    BDLMainWindow.show()
    sys.exit(app.exec_())
